# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "pds-webops-ubuntu-desktop-baseline"
  config.vm.box_url = "https://s3-eu-west-1.amazonaws.com/ukpds.common/vagrant_images/ubuntu-1604-baseline.box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.name = "PDS WebOps desktop"

    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "4096"

    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vb.customize ["modifyvm", :id, "--vram", "64"]
    vb.customize ["modifyvm", :id, "--monitorcount", "1" ]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  provision_file = lambda do |src, destination|
    if File.exists? File.expand_path src
      config.vm.provision "file", source: src, destination: destination
    else
      puts src + " not found. You will need to add it to the box manually."
    end
  end

  provision_file ["~/.aws", "/home/vagrant/.aws"]
  provision_file ["~/.netrc", "/home/vagrant/.netrc"]

  config.vm.provision "shell", inline: <<-SHELL
    sleep 10
    apt-get -y install git docker.io docker-compose docker-registry vim vim-gtk3 awscli keepassx curl
    usermod -a -G docker vagrant

    curl -L https://go.microsoft.com/fwlink/?LinkID=760868 > /tmp/vscode.deb
    dpkg -i /tmp/vscode.deb
    rm /tmp/vscode.deb
    curl https://releases.hashicorp.com/terraform/0.7.4/terraform_0.7.4_linux_amd64.zip > /tmp/terraform.zip
    unzip /tmp/terraform.zip -d /usr/local/bin
    rm /tmp/terraform.zip

    su vagrant
    mkdir -p /home/vagrant/abc/apps
    cd /home/vagrant/abc/apps
    git clone https://github.com/ukpds/members-prototype.git
    git clone https://github.com/ukpds/members-query-application.git
    git clone https://github.com/ukpds/content-driven.git
    git clone https://github.com/ukpds/data-driven.git
    git clone https://github.com/ukpds/design-prototypes.git
    git clone https://github.com/ukpds/domain-models.git
    git clone https://github.com/ukpds/petitions-data-driven.git
    git clone https://github.com/ukpds/pds-development-kit.git
    git clone https://github.com/ukpds/ruby-logging.git
    git clone https://github.com/ukpds/data-driven-php.git
    git clone https://github.com/ukpds/data-driven-test.git
    git clone https://github.com/ukpds/consul.git
    git clone https://github.com/ukpds/php-helloworld.git
    git clone https://github.com/ukpds/packer-docker-openvpn-ami.git
    git clone https://github.com/ukpds/search-for-member.git
    git clone https://github.com/ukpds/packer-docker-web-ami.git
    ln -s /home/vagrant/abc /home/vagrant/Desktop/abc

    # Install the "dos" command so you can type dos code . to run VS Code from current directory

    curl https://gist.githubusercontent.com/jammycakes/34c71119ef248f63eaa2239c110513f5/raw/5983b6f37977c6fdc210903409bff4a422d26a99/.bashrc | tail -n +2 >> /home/vagrant/.bashrc

    chown -R vagrant:vagrant /home/vagrant
  SHELL

  if File.exists? File.expand_path "~/.netrc"
    config.vm.provision "shell", inline: <<-SHELL2
      sudo -i -u vagrant git clone https://github.com/parliamentarydigitalservice/terraform-aws.git /home/vagrant/abc/terraform
      chown -R vagrant:vagrant /home/vagrant/abc/terraform
    SHELL2
  else
    puts '.netrc file not found. Private repositories will not be cloned.'
  end
end
